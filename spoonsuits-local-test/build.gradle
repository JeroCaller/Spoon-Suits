plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.jerocaller.test.spoonsuits-local-test'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'

	// Swagger
	// http://localhost:8080/swagger-ui/index.html
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'

	//implementation 'com.jerocaller.libs.spoonsuits:spoonsuits:1.0.0'
	implementation project(':spoonsuits')

	// 웹 브라우저 환경에서의 자동화 테스트를 위한 프레임워크
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	testImplementation 'org.seleniumhq.selenium:selenium-java:4.30.0'

	// 시스템에 설정된 크롬 브라우저 버전과 셀레니움 라이브러리 버전 간 호환을 위함.
	testImplementation 'org.seleniumhq.selenium:selenium-devtools-v139:4.35.0'
}

tasks.named('test') {
	useJUnitPlatform()

	finalizedBy 'jacocoTestReport'
}

tasks.named('jacocoTestReport') {
	dependsOn tasks.named('test')

	reports {
		xml.required = true // Codecov 같은 외부 서비스를 위해
		html.required = true  // 시각적으로 편하게 보기 위함.
	}

	def spoonsuitsProject = project(':spoonsuits')

	// 커버리지 결과에 spoonsuits-local-test/src/main/java가 아닌
	// spoonsuits 라이브러리 내 작성한 코드들이 대상이 되어 결과에 나오도록 설정.
	sourceDirectories.setFrom(files())
	classDirectories.setFrom(files())

	// 커버리지 측정 대상을 'spoonsuits' 라이브러리로 지정
	sourceDirectories.setFrom(files(spoonsuitsProject.sourceSets.main.allSource.srcDirs))
	classDirectories.from(spoonsuitsProject.sourceSets.main.output.classesDirs)

	// 실행 데이터는 현재 프로젝트(spoonsuits-local-test)의 테스트 결과를 사용
	executionData.from = files("${buildDir}/jacoco/test.exec")
}
